import { Box, HorizontalStack, Text, VerticalStack } from '@shopify/polaris'
import React, { useState } from 'react'

const ReportHeader = ({ userName, organizationName, currentDate, setUserName, setOrganizationName }) => {
    const [isEditingUserName, setIsEditingUserName] = useState(false)
    const [isEditingOrgName, setIsEditingOrgName] = useState(false)
    const [tempUserName, setTempUserName] = useState(userName)
    const [tempOrgName, setTempOrgName] = useState(organizationName)

    const handleOnClick = (type) => {
        if (type === 'username') {
            setIsEditingUserName(true)
        } else if (type === 'orgname') {
            setIsEditingOrgName(true)
        }
    }

    const handleSave = (type) => {
        if (type === 'username') {
            setUserName(tempUserName)
            setIsEditingUserName(false)
        } else if (type === 'orgname') {
            setOrganizationName(tempOrgName)
            setIsEditingOrgName(false)
        }
    }

    const handleBlurOrEnter = (e, type) => {
        if (e.type === 'blur' || e.key === 'Enter') {
            handleSave(type)
        }
    }

    return (
        <div className='report-cover-page-container'>
            <img src='/public/vul_report_bg.svg' alt="Header Image" className='report-cover-page' />
            <img src='/public/white_logo.svg' alt='akt-logo' className='report-akto-logo'></img>
            <div className='report-cover-page-content'>
                <Box width="100%">
                    <HorizontalStack align="space-between">
                        <VerticalStack gap={'5'}>
                            <div className='report-default-heading'>Vulnerability Report</div>
                            <div className="heading-text">
                                <Text variant="heading4xl">
                                    {isEditingOrgName ? (
                                        <input
                                            style={{ fontSize: '64px' }}
                                            type="text"
                                            value={tempOrgName}
                                            onChange={(e) => setTempOrgName(e.target.value)}
                                            onBlur={(e) => handleBlurOrEnter(e, 'orgname')}
                                            onKeyDown={(e) => handleBlurOrEnter(e, 'orgname')}
                                            autoFocus
                                            className="editable-input"
                                        />
                                    ) : (
                                        <span
                                            onClick={() => handleOnClick('orgname')}
                                            id='organization-name'
                                        >
                                            {organizationName}
                                        </span>
                                    )}{' '}
                                    API Security Findings
                                </Text>
                            </div>
                            {window.location.pathname.includes('issues') ? (
                                <Text variant="bodyMd">
                                    by{' '}
                                    {isEditingUserName ? (
                                        <input
                                            type="text"
                                            value={tempUserName}
                                            onChange={(e) => setTempUserName(e.target.value)}
                                            onBlur={(e) => handleBlurOrEnter(e, 'username')}
                                            onKeyDown={(e) => handleBlurOrEnter(e, 'username')}
                                            autoFocus
                                            className="editable-input"
                                        />
                                    ) : (
                                        <span
                                            onClick={() => handleOnClick('username')}
                                            id='username-wrapper'
                                            className='semibold-subtext-info'
                                        >
                                            @{userName}
                                        </span>
                                    )}
                                </Text>
                            ) : (
                                <Text variant="bodyMd">
                                    On <span className='semibold-subtext-info'>{currentDate}</span> by{' '}
                                    {isEditingUserName ? (
                                        <input
                                            type="text"
                                            value={tempUserName}
                                            onChange={(e) => setTempUserName(e.target.value)}
                                            onBlur={(e) => handleBlurOrEnter(e, 'username')}
                                            onKeyDown={(e) => handleBlurOrEnter(e, 'username')}
                                            autoFocus
                                            className="editable-input"
                                        />
                                    ) : (
                                        <span
                                            onClick={() => handleOnClick('username')}
                                            id='username-wrapper'
                                            className='semibold-subtext-info'
                                        >
                                            @{userName}
                                        </span>
                                    )}
                                </Text>
                            )}
                        </VerticalStack>
                    </HorizontalStack>
                </Box>
            </div>
        </div>
    )
}

export default ReportHeader